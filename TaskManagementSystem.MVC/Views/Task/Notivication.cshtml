



@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>نظام إدارة المهام - التعليقات والإشعارات</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    
    <style>
        .rtl { direction: rtl; }
        .notification-badge {
            animation: pulse 2s infinite;
        }
        
        .comment-item {
            transition: all 0.3s ease;
        }
        .comment-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }
        .notification-dropdown {
            max-height: 400px;
            overflow-y: auto;
        }
        .loading-spinner {
            border: 2px solid #f3f3f3;
            border-top: 2px solid #3498db;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            animation: spin 1s linear infinite;
        }
       
    </style>
</head>
<body class="bg-gray-50 font-sans rtl">
    <!-- Header -->
    <header class="bg-white shadow-md">
        <div class="container mx-auto px-4 py-4">
            <div class="flex justify-between items-center">
                <h1 class="text-2xl font-bold text-gray-800">
                    <i class="fas fa-tasks text-blue-600 ml-2"></i>
                    نظام إدارة المهام
                </h1>
                <div class="flex items-center space-x-4 space-x-reverse">
                    <!-- Notifications Bell -->
                    <div class="relative">
                        <button id="notificationBtn" class="relative p-2 text-gray-600 hover:text-blue-600 transition-colors">
                            <i class="fas fa-bell text-xl"></i>
                            <span id="notificationBadge" class="absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center notification-badge hidden">0</span>
                        </button>
                        <!-- Notifications Dropdown -->
                        <div id="notificationDropdown" class="absolute left-0 mt-2 w-80 bg-white rounded-lg shadow-lg border hidden z-50">
                            <div class="p-4 border-b">
                                <h3 class="font-semibold text-gray-800">الإشعارات</h3>
                            </div>
                            <div id="notificationList" class="notification-dropdown">
                                <!-- Notifications will be populated here -->
                            </div>
                            <div class="p-3 border-t text-center">
                                <button id="markAllRead" class="text-blue-600 hover:text-blue-800 text-sm font-medium">
                                    تحديد الكل كمقروء
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="flex items-center">
                        <img src="https://via.placeholder.com/32x32/4F46E5/FFFFFF?text=ح" alt="User" class="w-8 h-8 rounded-full ml-2">
                        <span class="text-gray-700">حسام أحمد</span>
                    </div>
                </div>
            </div>
        </div>
    </header>

    <div class="container mx-auto px-4 py-8">
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
            <!-- Task Details Card -->
            <div class="lg:col-span-1">
                <div class="bg-white rounded-lg shadow-md p-6">
                    <h2 class="text-xl font-bold text-gray-800 mb-4">تفاصيل المهمة</h2>
                    <div class="space-y-3">
                        <div>
                            <span class="font-semibold text-gray-600">العنوان:</span>
                            <p class="text-gray-800">تطوير نظام إدارة المهام</p>
                        </div>
                        <div>
                            <span class="font-semibold text-gray-600">الحالة:</span>
                            <span class="inline-block bg-yellow-100 text-yellow-800 px-2 py-1 rounded-full text-sm mr-2">
                                قيد التنفيذ
                            </span>
                        </div>
                        <div>
                            <span class="font-semibold text-gray-600">الأولوية:</span>
                            <span class="inline-block bg-red-100 text-red-800 px-2 py-1 rounded-full text-sm mr-2">
                                عالية
                            </span>
                        </div>
                        <div>
                            <span class="font-semibold text-gray-600">تاريخ الانتهاء:</span>
                            <p class="text-gray-800">2024-01-15</p>
                        </div>
                        <div>
                            <span class="font-semibold text-gray-600">المسؤول:</span>
                            <p class="text-gray-800">أحمد محمد</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Comments Section -->
            <div class="lg:col-span-2">
                <div class="bg-white rounded-lg shadow-md">
                    <!-- Comments Header -->
                    <div class="p-6 border-b">
                        <h2 class="text-xl font-bold text-gray-800">
                            <i class="fas fa-comments text-blue-600 ml-2"></i>
                            التعليقات والملاحظات
                            <span id="commentsCount" class="text-sm text-gray-500 mr-2">(3)</span>
                        </h2>
                    </div>

                    <!-- Add Comment Form -->
                    <div class="p-6 border-b bg-gray-50">
                        <form id="commentForm">
                            <div class="mb-4">
                                <label class="block text-gray-700 text-sm font-bold mb-2">
                                    إضافة تعليق جديد
                                </label>
                                <textarea 
                                    id="commentText" 
                                    class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500 resize-none" 
                                    rows="4" 
                                    placeholder="اكتب تعليقك هنا..."
                                    required
                                ></textarea>
                            </div>
                            <div class="flex justify-between items-center">
                                <div class="text-sm text-gray-500">
                                    <i class="fas fa-info-circle ml-1"></i>
                                    سيتم إرسال إشعار فوري لجميع المشاركين
                                </div>
                                <button 
                                    type="submit" 
                                    id="submitComment"
                                    class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-6 rounded-lg transition-colors flex items-center"
                                >
                                    <span id="submitText">إضافة تعليق</span>
                                    <div id="submitSpinner" class="loading-spinner mr-2 hidden"></div>
                                    <i id="submitIcon" class="fas fa-paper-plane mr-2"></i>
                                </button>
                            </div>
                        </form>
                    </div>

                    <!-- Comments List -->
                    <div id="commentsList" class="divide-y divide-gray-200">
                        <!-- Existing Comments -->
                        <div class="comment-item p-6">
                            <div class="flex items-start space-x-3 space-x-reverse">
                                <img src="https://via.placeholder.com/40x40/10B981/FFFFFF?text=م" alt="محمد علي" class="w-10 h-10 rounded-full">
                                <div class="flex-1">
                                    <div class="flex items-center justify-between mb-2">
                                        <h4 class="font-semibold text-gray-900">محمد علي</h4>
                                        <span class="text-sm text-gray-500">منذ ساعتين</span>
                                    </div>
                                    <p class="text-gray-700 mb-3">تم الانتهاء من تصميم قاعدة البيانات وبدء العمل على API endpoints. سيتم الانتهاء خلال يومين.</p>
                                    <div class="flex items-center space-x-4 space-x-reverse text-sm text-gray-500">
                                        <button class="hover:text-blue-600 transition-colors">
                                            <i class="fas fa-reply ml-1"></i>
                                            رد
                                        </button>
                                        <button class="hover:text-red-600 transition-colors">
                                            <i class="fas fa-edit ml-1"></i>
                                            تعديل
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="comment-item p-6">
                            <div class="flex items-start space-x-3 space-x-reverse">
                                <img src="https://via.placeholder.com/40x40/F59E0B/FFFFFF?text=س" alt="سارة أحمد" class="w-10 h-10 rounded-full">
                                <div class="flex-1">
                                    <div class="flex items-center justify-between mb-2">
                                        <h4 class="font-semibold text-gray-900">سارة أحمد</h4>
                                        <span class="text-sm text-gray-500">أمس</span>
                                    </div>
                                    <p class="text-gray-700 mb-3">يرجى مراجعة متطلبات الأمان قبل المتابعة. أرفقت ملف PDF يحتوي على المعايير المطلوبة.</p>
                                    <div class="mb-3">
                                        <div class="inline-flex items-center bg-blue-50 border border-blue-200 rounded-lg p-2">
                                            <i class="fas fa-file-pdf text-red-500 ml-2"></i>
                                            <span class="text-sm text-blue-700">security-requirements.pdf</span>
                                        </div>
                                    </div>
                                    <div class="flex items-center space-x-4 space-x-reverse text-sm text-gray-500">
                                        <button class="hover:text-blue-600 transition-colors">
                                            <i class="fas fa-reply ml-1"></i>
                                            رد
                                        </button>
                                        <button class="hover:text-red-600 transition-colors">
                                            <i class="fas fa-edit ml-1"></i>
                                            تعديل
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="comment-item p-6">
                            <div class="flex items-start space-x-3 space-x-reverse">
                                <img src="https://via.placeholder.com/40x40/8B5CF6/FFFFFF?text=ع" alt="عبد الله حسن" class="w-10 h-10 rounded-full">
                                <div class="flex-1">
                                    <div class="flex items-center justify-between mb-2">
                                        <h4 class="font-semibold text-gray-900">عبد الله حسن</h4>
                                        <span class="text-sm text-gray-500">منذ 3 أيام</span>
                                    </div>
                                    <p class="text-gray-700 mb-3">بدء العمل على المشروع. تم تحليل المتطلبات وإعداد البيئة التطويرية.</p>
                                    <div class="flex items-center space-x-4 space-x-reverse text-sm text-gray-500">
                                        <button class="hover:text-blue-600 transition-colors">
                                            <i class="fas fa-reply ml-1"></i>
                                            رد
                                        </button>
                                        <button class="hover:text-red-600 transition-colors">
                                            <i class="fas fa-edit ml-1"></i>
                                            تعديل
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>



                </div>
            </div>
        </div>
    </div>

    <!-- Toast Notification -->
    <div id="toast" class="fixed top-4 left-4 bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg transform -translate-y-full opacity-0 transition-all duration-300 z-50">
        <div class="flex items-center">
            <i class="fas fa-check-circle ml-2"></i>
            <span id="toastMessage">تم إضافة التعليق بنجاح!</span>
        </div>
    </div>

    <script>
        // SignalR Connection
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/commentHub")
            .build();

        // Global variables
        let notificationCount = 0;
        let notifications = [];

        // Initialize SignalR connection
        async function startConnection() {
            try {
                await connection.start();
                console.log("SignalR Connected");
                joinTaskGroup();
            } catch (err) {
                console.log("SignalR Connection Error: ", err);
                setTimeout(startConnection, 5000);
            }
        }

        // Join task group for real-time updates
        function joinTaskGroup() {
            const taskId = 1; // Replace with actual task ID
            connection.invoke("JoinTaskGroup", taskId.toString());
        }

        // SignalR event listeners
        connection.on("CommentAdded", function (comment) {
            addCommentToUI(comment);
            showNotification("تم إضافة تعليق جديد", "comment");
            updateCommentsCount();
        });

        connection.on("TaskStatusUpdated", function (taskId, status) {
            showNotification(`تم تحديث حالة المهمة إلى: ${status}`, "status");
        });

        connection.on("TaskDueDateAlert", function (taskId, taskTitle) {
            showNotification(`تنبيه: المهمة "${taskTitle}" تقترب من موعد الانتهاء`, "alert");
        });

        // DOM Elements
        const commentForm = document.getElementById('commentForm');
        const commentText = document.getElementById('commentText');
        const commentsList = document.getElementById('commentsList');
        const commentsCount = document.getElementById('commentsCount');
        const notificationBtn = document.getElementById('notificationBtn');
        const notificationDropdown = document.getElementById('notificationDropdown');
        const notificationBadge = document.getElementById('notificationBadge');
        const notificationList = document.getElementById('notificationList');
        const toast = document.getElementById('toast');

        // Comment form submission
        commentForm.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const text = commentText.value.trim();
            if (!text) return;

            // Show loading state
            showLoadingState(true);

            try {
                // Simulate API call
                await new Promise(resolve => setTimeout(resolve, 1000));
                
                const newComment = {
                    id: Date.now(),
                    text: text,
                    author: "حسام أحمد",
                    authorAvatar: "https://via.placeholder.com/40x40/4F46E5/FFFFFF?text=ح",
                    createdAt: "الآن",
                    taskId: 1
                };

                // Add comment to UI
                addCommentToUI(newComment);
                
                // Clear form
                commentText.value = '';
                
                // Show success toast
                showToast("تم إضافة التعليق بنجاح!");
                
                // Send via SignalR (simulate)
                // connection.invoke("AddComment", newComment);
                
            } catch (error) {
                showToast("حدث خطأ أثناء إضافة التعليق", "error");
            } finally {
                showLoadingState(false);
            }
        });

        // Show loading state for submit button
        function showLoadingState(loading) {
            const submitBtn = document.getElementById('submitComment');
            const submitText = document.getElementById('submitText');
            const submitSpinner = document.getElementById('submitSpinner');
            const submitIcon = document.getElementById('submitIcon');

            if (loading) {
                submitBtn.disabled = true;
                submitText.textContent = 'جاري الإضافة...';
                submitSpinner.classList.remove('hidden');
                submitIcon.classList.add('hidden');
                submitBtn.classList.add('opacity-50');
            } else {
                submitBtn.disabled = false;
                submitText.textContent = 'إضافة تعليق';
                submitSpinner.classList.add('hidden');
                submitIcon.classList.remove('hidden');
                submitBtn.classList.remove('opacity-50');
            }
        }

        // Add comment to UI
        function addCommentToUI(comment) {
            const commentElement = document.createElement('div');
            commentElement.className = 'comment-item p-6 border-t';
            commentElement.innerHTML = `
                <div class="flex items-start space-x-3 space-x-reverse">
                    <img src="${comment.authorAvatar}" alt="${comment.author}" class="w-10 h-10 rounded-full">
                    <div class="flex-1">
                        <div class="flex items-center justify-between mb-2">
                            <h4 class="font-semibold text-gray-900">${comment.author}</h4>
                            <span class="text-sm text-gray-500">${comment.createdAt}</span>
                        </div>
                        <p class="text-gray-700 mb-3">${comment.text}</p>
                        <div class="flex items-center space-x-4 space-x-reverse text-sm text-gray-500">
                            <button class="hover:text-blue-600 transition-colors">
                                <i class="fas fa-reply ml-1"></i>
                                رد
                            </button>
                            <button class="hover:text-red-600 transition-colors">
                                <i class="fas fa-edit ml-1"></i>
                                تعديل
                            </button>
                        </div>
                    </div>
                </div>
            `;
            
            // Add with animation
            commentElement.style.opacity = '0';
            commentElement.style.transform = 'translateY(20px)';
            commentsList.insertBefore(commentElement, commentsList.firstChild);
            
            setTimeout(() => {
                commentElement.style.transition = 'all 0.3s ease';
                commentElement.style.opacity = '1';
                commentElement.style.transform = 'translateY(0)';
            }, 10);

            updateCommentsCount();
        }

        // Update comments count
        function updateCommentsCount() {
            const count = commentsList.children.length;
            commentsCount.textContent = `(${count})`;
        }

        // Notification system
        function showNotification(message, type = 'info') {
            const notification = {
                id: Date.now(),
                message: message,
                type: type,
                timestamp: new Date().toLocaleString('ar-SA'),
                read: false
            };

            notifications.unshift(notification);
            updateNotificationBadge();
            addNotificationToDropdown(notification);
        }

        // Update notification badge
        function updateNotificationBadge() {
            const unreadCount = notifications.filter(n => !n.read).length;
            if (unreadCount > 0) {
                notificationBadge.textContent = unreadCount;
                notificationBadge.classList.remove('hidden');
            } else {
                notificationBadge.classList.add('hidden');
            }
        }

        // Add notification to dropdown
        function addNotificationToDropdown(notification) {
            const notificationElement = document.createElement('div');
            notificationElement.className = `p-3 border-b hover:bg-gray-50 cursor-pointer ${!notification.read ? 'bg-blue-50' : ''}`;
            notificationElement.innerHTML = `
                <div class="flex items-start space-x-3 space-x-reverse">
                    <div class="flex-shrink-0">
                        <i class="fas ${getNotificationIcon(notification.type)} text-blue-600"></i>
                    </div>
                    <div class="flex-1 min-w-0">
                        <p class="text-sm text-gray-900">${notification.message}</p>
                        <p class="text-xs text-gray-500 mt-1">${notification.timestamp}</p>
                    </div>
                    ${!notification.read ? '<div class="w-2 h-2 bg-blue-600 rounded-full"></div>' : ''}
                </div>
            `;

            notificationElement.addEventListener('click', () => {
                notification.read = true;
                notificationElement.classList.remove('bg-blue-50');
                notificationElement.querySelector('.w-2')?.remove();
                updateNotificationBadge();
            });

            notificationList.insertBefore(notificationElement, notificationList.firstChild);
        }

        // Get notification icon based on type
        function getNotificationIcon(type) {
            switch (type) {
                case 'comment': return 'fa-comment';
                case 'status': return 'fa-sync';
                case 'alert': return 'fa-exclamation-triangle';
                default: return 'fa-bell';
            }
        }

        // Toggle notification dropdown
        notificationBtn.addEventListener('click', function(e) {
            e.stopPropagation();
            notificationDropdown.classList.toggle('hidden');
        });

        // Close dropdown when clicking outside
        document.addEventListener('click', function() {
            notificationDropdown.classList.add('hidden');
        });

        // Mark all notifications as read
        document.getElementById('markAllRead').addEventListener('click', function() {
            notifications.forEach(n => n.read = true);
            updateNotificationBadge();
            Array.from(notificationList.children).forEach(el => {
                el.classList.remove('bg-blue-50');
                el.querySelector('.w-2')?.remove();
            });
        });

        // Show toast notification
        function showToast(message, type = 'success') {
            const toastMessage = document.getElementById('toastMessage');
            toastMessage.textContent = message;
            
            // Update toast color based on type
            if (type === 'error') {
                toast.className = toast.className.replace('bg-green-500', 'bg-red-500');
            } else {
                toast.className = toast.className.replace('bg-red-500', 'bg-green-500');
            }
            
            // Show toast
            toast.style.transform = 'translateY(0)';
            toast.style.opacity = '1';
            
            // Hide after 3 seconds
            setTimeout(() => {
                toast.style.transform = 'translateY(-100%)';
                toast.style.opacity = '0';
            }, 3000);
        }

        // Initialize the application
        document.addEventListener('DOMContentLoaded', function() {
            // Start SignalR connection (commented out for demo)
            // startConnection();
            
            // Update initial comments count
            updateCommentsCount();
            
            // Simulate some initial notifications
            setTimeout(() => {
                showNotification("مرحباً! يمكنك الآن متابعة التحديثات المباشرة", "info");
            }, 2000);
            
            // Simulate periodic notifications (for demo)
            setInterval(() => {
                const messages = [
                    "تم تحديث حالة مهمة أخرى",
                    "تعليق جديد من أحمد محمد",
                    "تنبيه: مهمة تقترب من موعد الانتهاء"
                ];
                const types = ["status", "comment", "alert"];
                const randomIndex = Math.floor(Math.random() * messages.length);
                showNotification(messages[randomIndex], types[randomIndex]);
            }, 30000); // Every 30 seconds for demo
        });
    </script>
</body>
</html>






